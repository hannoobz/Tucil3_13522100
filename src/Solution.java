/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author hanif
 */
public class Solution extends javax.swing.JFrame {
    private String[] path;
    private String algorithm;
    private String runtime;
    private String visited;
    private String length;
    /**
     * Creates new form Solution
     */
    public <T extends BaseSolver> Solution (T solver, String algorithmString) {
        path = new String[solver.pathSolution.size()];
        path = solver.pathSolution.toArray(path);
        length = "Length: "+(path.length-2)+"";
        runtime = "Runtime: "+solver.runtime+"ms";
        visited = "Visited: "+solver.getVisitCount();
        algorithm = "Algorithm: "+algorithmString;
        initComponents();
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        this.
        solutionPane = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        algoLabel = new javax.swing.JLabel();
        lengthLabel = new javax.swing.JLabel();
        visitCountLabel = new javax.swing.JLabel();
        runtimeLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jList1.setFont(new java.awt.Font("JetBrains Mono", 0, 17)); // NOI18N
        jList1.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = Solution.this.path;
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        solutionPane.setViewportView(jList1);

        algoLabel.setFont(new java.awt.Font("JetBrains Mono", 0, 14)); // NOI18N
        algoLabel.setText(this.algorithm);

        lengthLabel.setFont(new java.awt.Font("JetBrains Mono", 0, 14)); // NOI18N
        lengthLabel.setText(this.length);

        visitCountLabel.setFont(new java.awt.Font("JetBrains Mono", 0, 14)); // NOI18N
        visitCountLabel.setText(this.visited);

        runtimeLabel.setFont(new java.awt.Font("JetBrains Mono", 0, 14)); // NOI18N
        runtimeLabel.setText(this.runtime);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(solutionPane)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(algoLabel)
                            .addComponent(lengthLabel)
                            .addComponent(visitCountLabel)
                            .addComponent(runtimeLabel))
                        .addGap(0, 68, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(solutionPane)
                .addGap(18, 18, 18)
                .addComponent(algoLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lengthLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(visitCountLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(runtimeLabel)
                .addGap(32, 32, 32))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static <T extends BaseSolver> void main(T solver, String algorithmString) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Solution.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Solution.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Solution.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Solution.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Solution(solver,algorithmString).setVisible(true);
            }
        });
    }

    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel algoLabel;
    private javax.swing.JList<String> jList1;
    private javax.swing.JLabel lengthLabel;
    private javax.swing.JLabel runtimeLabel;
    private javax.swing.JScrollPane solutionPane;
    private javax.swing.JLabel visitCountLabel;
    // End of variables declaration//GEN-END:variables
}
